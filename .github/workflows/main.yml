# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI/CD Settings (D2)

on:
  push:
    branches:
      - deploy-production

jobs:
  slack-notification-start:
    name: Slack Notification (Start)
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '#skip_notification') }}
    steps:
      - name: Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: development
          SLACK_COLOR: 1BA9FF
          SLACK_ICON: https://dii.ixily.io/assets/img/logo.png
          SLACK_MESSAGE: Deploying the DII event listener app...
          SLACK_TITLE: Deploy Notification
          SLACK_USERNAME: Deploy Notification
          SLACK_FOOTER: Powered by AlphaCapture Team
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}     
  deploy:
    name: SSH Connection
    needs: slack-notification-start
    runs-on: ubuntu-latest
    steps:
      - name: SSH Connection
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.HOST}}
          username: ${{secrets.USERNAME}}
          key: ${{secrets.SSH_RSA_PRIVATE_KEY}}
          port: 22
          command_timeout: 500m
          script: |
            sudo docker system prune --force
            sudo rm -rf D2-event-listener
            sudo git clone https://github.com/IXily/D2-event-listener.git
            sudo chown -R ${{secrets.USERNAME}} ./D2-event-listener

            cd D2-event-listener
            sudo git checkout deploy-production

            sudo su -c 'echo "WALLET_PRIVATE_KEY=\"${{secrets.WALLET_PRIVATE_KEY}}\"" > .env && echo "SLACK_WEBHOOK_URL=\"${{secrets.SLACK_WEBHOOK_URL_URL}}\"" >> .env'

            sudo sh ./scripts/pull_spinup-live.sh
  check-1:
    name: Deploy Check 1
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Check 1
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.HOST}}
          username: ${{secrets.USERNAME}}
          key: ${{secrets.SSH_RSA_PRIVATE_KEY}}
          port: 22
          command_timeout: 500m
          script: |
            cd D2-event-listener
            sudo git checkout deploy-production
            sudo sh ./scripts/reset.sh
  check-2:
    name: Deploy Check 2
    needs: check-1
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Check
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.HOST}}
          username: ${{secrets.USERNAME}}
          key: ${{secrets.SSH_RSA_PRIVATE_KEY}}
          port: 22
          command_timeout: 500m
          script: |
            cd D2-event-listener
            sudo git checkout deploy-production
            sudo sh ./scripts/reset.sh
  slack-notification-finish:
    name: Slack Notification (Finish)
    needs: check-2
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '#skip_notification') }}
    steps:
      - name: Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: development
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://dii.ixily.io/assets/img/logo.png
          SLACK_MESSAGE: DII event listener app deployed, check if the d2Status property is success here https://d2-event-listener.ixily.io
          SLACK_TITLE: Deploy Notification
          SLACK_USERNAME: Deploy Notification
          SLACK_FOOTER: Powered by AlphaCapture Team
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
  slack-notification-error:
    name: Slack Notification (Error)
    runs-on: ubuntu-latest
    if: ${{
      failure() &&
      !contains(github.event.head_commit.message, '#skip_notification')
      }}
    steps:
      - name: Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: development
          SLACK_COLOR: E13F31
          SLACK_ICON: https://dii.ixily.io/assets/img/logo.png
          SLACK_MESSAGE: The DII event listener app was not deployed (Â¡error!), check the status from the Actions URL section to see and solve the error.
          SLACK_TITLE: Deploy Notification
          SLACK_USERNAME: Deploy Notification
          SLACK_FOOTER: Powered by AlphaCapture Team
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}